::ln
ln - The link command.

Creates a symbolic (soft) link.

Basic syntax:

  `ln -s {target-filename} {symbolic-filename}`

  
:links 
http://linux.about.com/


::find
find - The find link command.

Use the find command to search for files or directories.

Basic syntax:
  `find . -name "*.txt" `

Some useful options


* 	Running the last executed find

	`!find`

	<i>In fact ! can be used with any unix command to re-run last invocation</i>


* 	Modified less than one day ago:

	`find . -mtime -1`
	

*	By permission:

	`find . -perm 777 –print`
	
	The above will find all executable files under the current directory.

*	Case insensitive

	`find . –iname "foo"`
	
*	Finding text in files

	`find . –iname "lic*.txt" –print | xargs grep “Apache License”`
	
	or
	
	`find . iname "lic*.txt" -exec grep -H "Apache License" '{}' \; -print`
	
	
*	Limiting depth

	`find . -maxdepth 2 -name "*.txt"`
    

::cron
cron - schedule background tasks

## Quick steps for setting up a cron job

1.	Open a root shell and type the following:

	`crontab -e` 
	
	This should open a VI like editor. Note to run `crontab` you may need to be added to the 
	`/usr/lib/cron/cron.allow` file (just a single line with user name, you may also need to
	create the file. Only root can edit this file). Also check you are not explicitly 
	excluded in the `cron.deny` file.
	
2.	Add a new cron tab line, format is:

	`minute(0-59) hour(0-23) day_of_month(1-31) month(1-12) day_of_week(0-7) /path/script.sh`
	
	Field values can be replaced with a star (*). Multiple values can be specified with commas. Some examples
	
	`0 10 * * * /path/script.sh`  - run at 10AM every day
	
	`0 0 1,8,15,22 * * /path/script.sh`  - run at midnight every 7th day 
	
	Save the editor. Thats it.
	
3.	To check they are running, view your mail, e.g.

	`/var/spool/mail/<username>`
	
	Can also use `crontab -l` to display the current settings.


	
	
	



:links
http://www.sophos.com/en-us/support/knowledgebase/12176.aspx
http://www.adminschoice.com/crontab-quick-reference





